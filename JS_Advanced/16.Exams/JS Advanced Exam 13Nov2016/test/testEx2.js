let expect = require('chai').expect;
let createList = require('../list-add-swap-shift-left-right')

describe("test", function () {
    let data;
    beforeEach(function () {
        data = createList()
    })
    describe('if first list is empty', function () {
        it('first', function () {
            expect(data.toString()).to.be.equal('')
        })

        it('function add', function () {
            data.add(1)
            expect(data.toString()).to.equal('1')
        })
        it('function add', function () {
            data.add('maya')
            expect(data.toString()).to.equal('maya')
        })
        it('function add', function () {
            data.add(1)
            data.add('maya')
            data.add(5)
            expect(data.toString()).to.equal('1, maya, 5')
        })

        it('chekc with one item', function () {
            data.add(2);
            data.shiftLeft();
            expect(data.toString()).to.be.equal('2')
        });
        it('function add', function () {
            data.add(1)
            data.add('two')
            data.add(3)
            data.shiftLeft()
            expect(data.toString()).to.equal('two, 3, 1')
        })
        it('function add and shiftLeft', function () {
            data.add(1)
            data.add('two')
            data.add(3)
            data.shiftLeft()
            data.shiftLeft()
            expect(data.toString()).to.equal('3, 1, two')
        })
        it('function add and shiftLeft', function () {
            data.add(1)
            data.add('two')
            data.add(3)
            data.shiftLeft()
            data.add('four')
            expect(data.toString()).to.equal('two, 3, 1, four')
        })
        it('function add and shiftRight', function () {
            data.add(1)
            data.add('two')
            data.add(3)
            data.add('four')
            data.shiftRight()
            expect(data.toString()).to.equal('four, 1, two, 3')
        })
        it('function add and shiftLeft and Right', function () {
            data.add(1)
            data.add('two')
            data.add(3)
            data.shiftLeft()
            data.add('four')
            data.shiftRight()
            expect(data.toString()).to.equal('four, two, 3, 1')
        })
        it('function add, shiftLeft, shiftRight, swap', function () {
            data.add(1)
            data.add('two')
            data.add(3)
            data.shiftLeft()
            data.add('four')
            data.shiftRight()
            expect(data.swap(0, 0)).to.equal(false)
        })
        it('function add, shiftLeft, shiftRight, swap', function () {
            data.add(1)
            data.add('two')
            data.add(3)
            data.shiftLeft()
            data.add('four')
            data.shiftRight()
            expect(data.swap(0, 3)).to.equal(true)
        })
        it('function add, swap.toString', function () {
            data.add(1)
            data.add('two')
            data.add(3)
            data.add('four')
            data.swap(0, 3)
            expect(data.toString()).to.equal('four, two, 3, 1')
        })
        it('function add, swap.toString', function () {
            data.add(1)
            data.add('two')
            data.add(3)
            data.add('four')
            data.swap(0, 1)
            expect(data.toString()).to.equal('two, 1, 3, four')
        })
        it('function add, swap.toString', function () {
            data.add(1)
            data.add('two')
            data.add(3)
            data.add('four')
            data.swap(0, -3)
            expect(data.toString()).to.equal('1, two, 3, four')
        })
        it('function add, swap.toString', function () {
            data.add(1)
            data.add('two')
            data.add(3)
            data.add('four')
            data.swap(0, 20)
            expect(data.toString()).to.equal('1, two, 3, four')
        })
        it('function add, swap.toString', function () {
            data.add(1)
            data.add('two')
            data.add(3)
            data.add('four')
            data.swap(0, 'maya')
            expect(data.toString()).to.equal('1, two, 3, four')
        })
        it('function add, swap.toString', function () {
            data.add(1)
            data.add('two')
            data.add(3)
            data.add('four')
            data.swap(-1, 1)
            expect(data.toString()).to.equal('1, two, 3, four')
        })
        it('function add, swap.toString', function () {
            data.add(1)
            data.add('two')
            data.add(3)
            data.add('four')
            data.swap(20, 0)
            expect(data.toString()).to.equal('1, two, 3, four')
        })
        it('function add, swap.toString', function () {
            data.add(1)
            data.add('two')
            data.add(3)
            data.add('four')
            data.swap('maya', 0)
            expect(data.toString()).to.equal('1, two, 3, four')
        })
        it('function add, swap.toString', function () {
            data.add(1)
            data.add('two')
            data.add(3)
            data.add('four')
            data.swap('maya', 'maya')
            expect(data.toString()).to.equal('1, two, 3, four')
        })
        it('function add, swap.toString', function () {
            data.add(1)
            data.add('two')
            data.add(3)
            data.add('four')
            data.swap(-20, -20)
            expect(data.toString()).to.equal('1, two, 3, four')
        })
        it('function add, swap.toString', function () {
            data.add(1)
            data.add('two')
            data.add(3)
            data.add('four')
            data.swap(1.5, -20)
            expect(data.toString()).to.equal('1, two, 3, four')
        })
        it('function add, swap.toString', function () {
            data.add(1)
            data.add('two')
            data.add(3)
            data.add('four')
            data.swap(-20, 1.5)
            expect(data.toString()).to.equal('1, two, 3, four')
        })
        it('function add, swap.toString', function () {
            data.add(1)
            data.add('two')
            data.add(3)
            data.add('four')
            data.swap(1, 1.5)
            expect(data.toString()).to.equal('1, two, 3, four')
        })
        it('function add, swap.toString', function () {
            data.add(1)
            data.add('two')
            data.add(3)
            data.add('four')
            data.swap(1.5, 1)
            expect(data.toString()).to.equal('1, two, 3, four')
        })
        it('function add, swap.toString', function () {
            data.add(1)
            data.add('two')
            data.add(3)
            data.add('four')
            data.swap(0, 0)
            expect(data.toString()).to.equal('1, two, 3, four')
        })
        it('function add, swap.toString', function () {
            data.add(1)
            data.add('two')
            data.add(3)
            data.add('four')
            expect(data.swap(0, 0)).to.equal(false)
        })
        it('function add, swap.toString', function () {
            data.add(1)
            data.add('two')
            data.add(3)
            data.add('four')
            expect(data.swap(5, -5)).to.equal(false)
        })
        it('function add, swap.toString', function () {
            data.add(1)
            data.add('two')
            data.add(3)
            data.add('four')
            expect(data.swap(1.5, 2)).to.equal(false)
        })
        it('function add, swap.toString', function () {
            data.add(1)
            data.add('two')
            data.add(3)
            data.add('four')
            expect(data.swap(2, 1.5)).to.equal(false)
        })
        it('function add, swap.toString', function () {
            data.add(1)
            data.add('two')
            data.add(3)
            data.add('four')
            expect(data.swap(1.5, 1.5)).to.equal(false)
        })
        it('function add, swap.toString', function () {
            data.add(1)
            data.add('two')
            data.add(3)
            data.add('four')
            expect(data.swap(20, 20)).to.equal(false)
        })


        it('function add', function () {
            data.add(1)
            data.add(2)
            data.shiftRight()
            expect(data.toString()).to.equal('2, 1')
        })
        it('function add', function () {
            data.add(1)
            data.add(2)
            data.shiftLeft()
            expect(data.toString()).to.equal('2, 1')
        })
        it('function add', function () {
            data.add(1)
            data.add('two')
            expect(data.swap(0, 1)).to.equal(true)
        })
        it('function add', function () {
            data.add(1)
            data.add('two')
            data.add(3)
            data.shiftLeft()
            data.add('four')
            data.shiftRight()
            data.swap(1, 10)
            expect(data.toString()).to.equal('four, two, 3, 1')
        })

    })
})